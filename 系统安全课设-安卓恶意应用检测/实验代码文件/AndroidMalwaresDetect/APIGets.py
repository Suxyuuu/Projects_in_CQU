#coding=utf-8
from androguard.core.bytecodes import apk, dvm
from androguard.core.analysis import analysis
import re
import os
good_apk_file_path = r"F:\System_security\apk\good"
bad_apk_file_path = r"F:\System_security\apk\bad"
good_API_file_list = r"F:\System_security\api\good"
bad_API_file_list = r"F:\System_security\api\bad"


# def get_permissions(path):
#     str = "Permission:"
#     app = apk.APK(path)
#     permission = app.get_permissions()
#     file = permission
#     print(permission)
#     writeToTxt(str, file)
#     return permission
count = 1
def get_apis(apk_path,name,api_path):
  app = apk.APK(path) #获取apk对象
  app_dex = dvm.DalvikVMFormat(app.get_dex())#获取dex对象
  app_x = analysis.Analysis(app_dex)    #获取分析对象
  methods = set()           #初始化一个集合来存储api，避免重复
  cs = [cc.get_name() for cc in app_dex.get_classes()]#列表生成式：将dex文件里的所有类的方法获取出来形成一个列表
  for method in app_dex.get_methods():
    g = app_x.get_method(method)#寻找method，若提供的method不存在，则返回none，进一步增强或得的method
    if method.get_code() == None:#get_code返回与方法关联的代码对象，若没有则返回NONE
      continue

    for i in g.get_basic_blocks().get(): #返回一basicblocks对象，可以用于生成一个控制流
      for ins in i.get_instructions():#从这个baseblock中拿到所有的指令
        output = ins.get_output()
        match = re.search(r'(Landroid[^;]*;)', output)
        if match and match.group(1) not in cs:#如果匹配到并且不在cs里，则加入集合
          methods.add(match.group())

  methods = list(methods)
  methods.sort()
  global count
  file = methods
  writeToTxt( file,name,api_path)
  print(str(count) + "    finished" + "\n")
  count += 1
  return methods

def writeToTxt(file,name,api_path):

    fm = open(api_path+"\\"+name+'.txt', 'w')
    for i in file:
        tmp = i.split('.')
        final = tmp[-1]
        fm.write(final+"\n")
        #fm.write()
    fm.close()


def main(apk_path, apkname,api_path):
  get_apis(apk_path,apkname,api_path)

if __name__ == '__main__':
    # file_list = os.listdir(good_apk_file_path)
    # #存放apk文件的目录
    # for name in file_list:
    #     path = good_apk_file_path+"\\"+name
    #     main(path,name,good_API_file_list)

    file_list = os.listdir(good_apk_file_path)
    #存放apk文件的目录
    for name in file_list:
        path = good_apk_file_path+"\\"+name
        try:
            main(path,name,good_API_file_list)
        except Exception as E:
            pass
        continue